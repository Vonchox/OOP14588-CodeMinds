/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package proyecto.espe.vistaProducto;

import java.awt.Graphics;
import java.awt.Image;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import proyecto.espe.modelos.Inventario;
import proyecto.espe.modelos.Productos;
import proyecto.espe.servicio.InventarioServicio;
import proyecto.espe.servicio.ProductosServicio;

/**
 *
 * @author PC
 */
public class ModificarProducto extends javax.swing.JInternalFrame {

    String spCantidadProducto;
    private String codigo = null;
    private Productos productos = null;
    private int idcodigo = 0;
    List<Inventario> listaInventario = InventarioServicio.ListaInventario();
    
    FondoPanel f1= new FondoPanel();
    public ModificarProducto() {
        this.setContentPane(f1);
        initComponents();
             
        codigo = ConsultarProducto.codCodigo;
        if (codigo.length() == 0) {
            //codigo = ConsultaSimple.codCedula;
        }

        cargarDatos();
    }
    
     public void cargarComboInventario(int idCodigo) {
        for (Inventario rol : listaInventario) {
            if (idCodigo != rol.getCodigo()) {
                cmbSeleccionProducto.addItem(rol.getCodigo() + " - " + rol.getProducto());
            }
        }
    }

    public void cargarDatos() {
        productos = ProductosServicio.BuscarCodigoProductos(codigo);
        
        cmbSeleccionProducto.addItem(productos.getIdcodigo() + " - " + productos.getNombreProducto());
        
        txtCodigoProducto.setText(productos.getCodigo());
        txtPrecioProducto.setText(productos.getPrecio());
        String cantidad = productos.getCantidad();
        System.out.println(cantidad);
        System.out.println(cantidad);
        int cantidad_i = Integer.parseInt(cantidad);
        

        spCantidad.setValue(cantidad_i);      
        cargarComboInventario(productos.getIdcodigo());

    }

    private void limpiarDatos() {
        txtCodigoProducto.setText("");
        txtPrecioProducto.setText("");
        cmbSeleccionProducto.setSelectedIndex(0);
        spCantidad.setValue(0);
    }
    
    public void validarPerfil(){
        if(idcodigo == 1){
            
        }else if(idcodigo == 2){
            
        }
        limpiarDatos();
        this.dispose();
    }
    
    private boolean validarProducto() {
        boolean validar = false;
        if ((cmbSeleccionProducto.getSelectedItem().toString().length() > 0) && (txtCodigoProducto.getText().length() > 0) && (txtPrecioProducto.getText().length() > 0) && (spCantidadProducto.length() > 0)) {
            validar = true;
        }
        return validar;

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtCodigoProducto = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cmbSeleccionProducto = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        txtPrecioProducto = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        spCantidad = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setText("MODIFICAR PRODUCTO");

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel14.setText("Código:");

        txtCodigoProducto.setEditable(false);

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel15.setText("Producto :");

        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel16.setText("Precio :");

        jLabel17.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel17.setText("Cantidad: ");

        spCantidad.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spCantidad.setInheritsPopupMenu(true);
        spCantidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spCantidadStateChanged(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/editar1.png"))); // NOI18N
        jButton1.setText("MODIFICAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPrecioProducto)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbSeleccionProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCodigoProducto))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cmbSeleccionProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(spCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (validarProducto()) {
            int resultado = JOptionPane.showConfirmDialog(null, "Seguro de guardar los datos", "Confirmación", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (resultado == JOptionPane.OK_OPTION) {
                String dato = cmbSeleccionProducto.getSelectedItem().toString();
                String inventario[] = dato.split("-");
                idcodigo = Integer.parseInt(inventario[0].trim());
                Inventario temp = InventarioServicio.BuscarInventario(idcodigo);
                Productos actualizarProductos = new Productos(txtCodigoProducto.getText(), spCantidadProducto, txtPrecioProducto.getText(), temp.getProducto(), idcodigo);
                
                if (ProductosServicio.ActualizarProductos(actualizarProductos)) {
                    JOptionPane.showMessageDialog(null, "Datos actualizados correctamente");
                    if(ConsultarProducto.abierto){
                        ConsultarProducto.cargarProductos();
                    }
                    //else if(ConsultaSimple.abierto){
                    //    ConsultaSimple.cargarDatos();
                    //}
                    
                    validarPerfil();
                                        
                } else {
                    JOptionPane.showMessageDialog(null, "No se han podido actualizar los datos");
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void spCantidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spCantidadStateChanged
        int valorActual = (int) spCantidad.getValue();
        spCantidadProducto = String.valueOf(valorActual);
    }//GEN-LAST:event_spCantidadStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbSeleccionProducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JSpinner spCantidad;
    private javax.swing.JTextField txtCodigoProducto;
    private javax.swing.JTextField txtPrecioProducto;
    // End of variables declaration//GEN-END:variables

    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/fondos/fondo4.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }
}
